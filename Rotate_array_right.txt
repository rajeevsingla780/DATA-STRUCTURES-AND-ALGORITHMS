//Rotate Array


//-----------------------------------------------------

//With O(n) space complexity and O(n) time complexity

//Code in C++

class Solution {
public:
    void rotate(vector<int>& nums, int k) {
        vector <int> vc=nums;
        for(int i=0;i<nums.size();i++)
        {
            vc[(i+k)%nums.size()]=nums[i];
        }
        nums=vc;
    }
};

//------------------------------------------------------

//With O(1) space complexity and O(n) time complexity

//In this approach maine n-k tak reverse kiya fir k to n then full reverse
//Code in C++

class Solution {
public:
    void reverse(vector<int> & nums ,int low,int high)
    {
        while(low<high)
        {
            swap(nums[low],nums[high]);
                low++;
                high--;
        }
    }
    void rotate(vector<int>& nums, int k) {
        
        k=k%nums.size();
        reverse(nums,0,nums.size()-k-1);
        reverse(nums,nums.size()-k,nums.size()-1);
        reverse(nums,0,nums.size()-1);     
    }
};


