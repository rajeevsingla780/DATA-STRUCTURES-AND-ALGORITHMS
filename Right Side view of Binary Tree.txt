//Right Side view of Binary Tree
//https://leetcode.com/problems/binary-tree-right-side-view/
//--------------------------------------------------------------------------------------

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> rightSideView(TreeNode* root) {
        vector<int> vec1;
        queue <TreeNode*> q1;
        if(root==NULL)
            return {};
        q1.push(root);
        while(!q1.empty())
        {
            int size=q1.size();
            for(int i=0;i<size;i++)
            {
                TreeNode* q=q1.front();
                q1.pop();
                if(i==size-1)
                {
                    vec1.push_back(q->val);
                }
                if(q->left!=NULL)
                    q1.push(q->left);
                if(q->right!=NULL)
                    q1.push(q->right);
            }
            
        }
        return vec1;
    }
};