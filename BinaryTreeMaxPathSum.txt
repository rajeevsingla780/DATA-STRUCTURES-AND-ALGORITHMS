
//Binary Tree Maximum Path Sum
//A path in a binary tree is a sequence of nodes where each pair of adjacent nodes in the sequence has an edge connecting them. 
//A node can only appear in the sequence at most once. Note that the path does not need to pass through the root.
//The path sum of a path is the sum of the node's values in the path.
//Given the root of a binary tree, return the maximum path sum of any path.

//-----------------------------------------------------------------------------//
//CODE IN C++

class Solution {
public:
   int maxy;
    Solution()
    {
     maxy=-100000;   
    }
    int maxPathSum(TreeNode* root) {
        int t=maPathSum(root);
        return maxy;
    }
    int maPathSum(TreeNode* root) {
        if(root==NULL)
            return 0;
        else
        {
            int l=maPathSum(root->left);
            int r=maPathSum(root->right);
            int tu=max(max(l+root->val,r+root->val),root->val);
            int tu1=max(tu,l+r+root->val);
            if(tu1>maxy)
            {
                maxy=tu1;
            }
            return tu;
        }
    }
};